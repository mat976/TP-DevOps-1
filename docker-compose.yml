services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "app", "-d", "appdb" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app_net

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://app:app@db:5432/appdb
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - app_net

  frontend:
    build: ./frontend
    environment:
      - BACKEND_URL=http://localhost:8000
      - PORT=3000
      - LIVE_RELOAD=true
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/public:/usr/src/app/public
      - ./frontend/server.js:/usr/src/app/server.js
    command: node server.js
    networks:
      - app_net

volumes:
  db_data:


networks:
  app_net:
    name: tpdevops_net
    driver: bridge
